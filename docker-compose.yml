version: '3.1'
networks:
  # frontend:
  #   driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
    ipam:
      config:
        - subnet: 172.25.0.0/16

## for windows ##
volumes:
  mydata:
    # driver: local
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /home/luozhifeng/Documents/web/composed/data/mydata

services:
  # nginx:
  #   image: nginx:1.15-alpine
  #   container_name: lnginx
  #   restart: always
  #   depends_on:
  #     - php
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ${APP_WORKSPACE}:/app
  #     - ./nginx/conf.d:/etc/nginx/conf.d/:ro
  #   networks:
  #     - backend

  tengine:
    # build: ./tengine
    image: elicht/tengine:231v1
    container_name: ltengine
    restart: always
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_WORKSPACE}:/app
      - ./tengine/conf.d:/etc/nginx/conf.d/:ro
    networks:
      backend:
        ipv4_address: 172.25.0.10

  # php:
  #   build:
  #     context: ./php
  #     args:
  #       - INSTALL_XDEBUG=${INSTALL_XDEBUG}
  #       - TZ=${TZ}
  #   # image: elicht/php:734v2
  #   container_name: lphp
  #   restart: always
  #   links:
  #     - mysql
  #     - mongo
  #     - redis
  #   expose:
  #     - "9000"
  #   volumes:
  #     - ${APP_WORKSPACE}:/app
  #     - ./php/php.ini:/usr/local/etc/php/php.ini:ro
  #   networks:
  #     backend:
  #       ipv4_address: 172.25.0.5

  php:
    # build: ./tars
    image: elicht/php:737v1
    container_name: lphp
    restart: always
    links:
      - mysql
      - mongo
      - redis
    expose:
      - "9000"
    volumes:
      - ${APP_WORKSPACE}:/app
      - ./tars/php.ini:/etc/php.ini:ro
    environment:
      MOUNT_DATA: ${TARS_MOUNT_DATA}
      DBIP: mysql
      DBPort: "3306"
      DBUser: "root"
      DBPassword: ${MYSQL_DB_PASSWORD}
      DBTarsPass: ${MYSQL_TARS_PASSWORD}
    networks:
      backend:
        ipv4_address: 172.25.0.5

  mysql:
    image: mysql:5.7
    container_name: lmysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/conf.d/custom.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_PASSWORD}
      
  redis:
    image: redis:5-alpine
    container_name: lredis
    restart: always
    volumes:
      - ./data/redis:/data
    networks:
      - backend
    ports:
      - "6379:6379"
  
  mongo:
    image: mongo
    container_name: lmongo
    restart: always
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      # - ./data/mongo:/data/db
      - mydata:/data/db  ## for windows ##
    networks:
      - backend
    ports:
      - "27017:27017"

  # node:
  #   image: node
  #   container_name: lnode
  #   working_dir: /app
  #   volumes:
  #     - ./app:/app
  #   expose:
  #     - "8081"
  #   ports:
  #     - "8081:80"
  #   networks:
  #     - frontend
  #   command: "node index.js" # npm start | npm install --registry=https://registry.npm.taobao.org

  tars_center:
    image: tarscloud/tars:php
    container_name: ltars
    restart: always
    depends_on:
      - mysql
    volumes:
      - ${APP_WORKSPACE}tarsData:/data
    environment:
      MOUNT_DATA: ${TARS_MOUNT_DATA}
      DBIP: mysql
      DBPort: "3306"
      DBUser: "root"
      DBPassword: ${MYSQL_DB_PASSWORD}
      DBTarsPass: ${MYSQL_TARS_PASSWORD}
    links:
      - mysql
      - php
    ports:
      - "3000:3000"
    networks:
      backend:
        ipv4_address: 172.25.0.16